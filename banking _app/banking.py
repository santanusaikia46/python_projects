# -*- coding: utf-8 -*-
"""Banking.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZKc__n0ejL1BCYVuQuWkmTURoBvPAGIo
"""

import time

class BankAccount:

    def __init__(self, account_holder, initial_balance=0, transaction_pin=None):
        self.account_holder = account_holder
        self.balance = initial_balance
        self.transaction_pin = transaction_pin
        self.transaction_pin_attempts = 0  # Initialize transaction PIN attempts
        self.transaction_history = []  # List to store transaction history

        # Set global maximum withdrawal amount
        global MAX_WITHDRAWAL_AMOUNT
        MAX_WITHDRAWAL_AMOUNT = 10000

    def deposit(self, amount):
        if amount > 0:
            self.balance += amount
            self.transaction_history.append(f"Deposited {amount} Rs. New balance: {self.balance}")
        else:
            raise ValueError("Deposit amount must be greater than zero.")

    def withdraw(self, amount):

        # Check if transaction PIN is set
        if self.transaction_pin is None:
            print("transaction PIN is not set. Please set your transaction PIN.")
            return

        # Check if withdrawal amount is valid
        if 0 < amount <= self.balance:
            # Check if withdrawal amount exceeds maximum limit
            if amount <= MAX_WITHDRAWAL_AMOUNT and self.validate_transaction_pin():
                self.balance -= amount
                print(f"Withdraw {amount} Rs. New balance: {self.balance}")
                self.transaction_history.append(f"Withdraw {amount} Rs. New balance: {self.balance}")
            else:
                self.transaction_pin_attempts += 1
                if self.transaction_pin_attempts < 3:
                    print("Invalid PIN.")
                    print("Chances Left : ", 3 - self.transaction_pin_attempts)
                    return
                else:
                    print("Your account is locked. Please try again after 30 seconds.")
                    time.sleep(30)

        else:
            self.amount_attempts += 1
            if self.amount_attempts < 3:
                print("Withdrawal amount exceeds transaction limit")
                print("Chances Left : ", 3 - self.amount_attempts)
                return

    def check_balance(self):
        print(f"Current balance for {self.account_holder}: {self.balance}")

    def validate_transaction_pin(self):
        entered_pin = input("Enter your Transaction Pin  ")
        return entered_pin == self.transaction_pin

    def change_transaction_pin(self, new_transaction_pin):
        if self.validate_transaction_pin():
            self.transaction_pin = new_transaction_pin
            print("Transaction PIN changed successfully.")
        else:
            raise ValueError("Invalid PIN. PIN not changed.")

    def get_transaction_history(self):
        return [*self.transaction_history]

def main():
    print("Welcome to Our Bank!")
    try:
        account_holder = input("Enter account holder's name: ")
        initial_balance = float(input("Enter initial balance: "))
        transaction_pin = input("Set your Transaction PIN: ")

        user_account = BankAccount(account_holder, initial_balance, transaction_pin)

        flag = True
        while flag:
            print("\n Select an option.")
            print("1. Deposit")
            print("2. Withdraw")
            print("3. Check Balance")
            print("4. Check Transaction History")
            print("5. Change Transaction PIN")
            print("6. Exit")

            choice = input("Enter option number: ")

            if choice == "1":
                amount = float(input("Enter deposit amount: "))
                do_transaction(user_account, "deposit", amount)
            elif choice == "2":
                amount = float(input("Enter withdrawal amount: "))
                do_transaction(user_account, "withdraw", amount)
            elif choice == "3":
                user_account.check_balance()
            elif choice == "4":
                print(*user_account.get_transaction_history())
            elif choice == "5":
                new_pin = input("Enter new Transaction PIN: ")
                user_account.change_transaction_pin(new_pin)
            elif choice == "6":
                print("Thank you for using our bank services!")
                flag = False
            else:
                print("Invalid choice. Please select a valid option.")

    except ValueError as e:
        print(e)


def do_transaction(account, transaction_type, amount):
    if transaction_type == "deposit":
        account.deposit(amount)
    elif transaction_type == "withdraw":
        account.withdraw(amount)
    else:
        raise ValueError("Invalid transaction type.")


if __name__ == "__main__":
  main()